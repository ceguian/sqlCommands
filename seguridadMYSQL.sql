/*
DETENER EL SERVIDOR
	- WINDOWS / SERVICIOS / MYSQL80 / INTERRUMPIR SERVICIO
	- CMD (EJECUTADO COMO ADMINISTRADOR) / net stop mysql80 | net start mysql80 (PARA REINICIAR)
    
TUNNING PARA HARDWARE 
	4 FORMAS DE CONFIGURAR EL AMBIENTE MYSQL
		- ESQUEMAS 
		- INDICES 
		- VARIABLES INTERNAS
		- HARDWARE / SISTEMA OPERATIVO
			
            * HARWARE 
				- TRABAJAR CON SISTEMAS OPERATIVOS DE 64-BITS
				- CONFIGURACION DE LA RAM
				- USO DE CONTRAOLADOR DE DISCO RAID
					- RAID 0: DIVIDE LOS DATOS EN 2 HD DIFERENTES
					- RAID 1: UNO DE LOS HD ES COPIA DEL OTRO
					- RAID 5: DIVIDE LOS DATOS EN MAS DE DOS HD
					- RAIND 10: LOS HD TIENEN ESPEJO
                
VARIABLES DE AMBIENTE
	- EXISTE MAS DE 250 VARIABLES DE AMBIENTE MYSQL
    - SHOW STATUS: MUEESTRA LOS VALORES DE LAS VARIABLES DE ENTORNO
    - EXISTEN 2 TIPOS: GLOBAL Y SESSION / LA PRIMERA VALE PARA TODAS 
		LA CONEXIONES DEL ENTORNO DE MYSQL. LA ULTIMA SOO PARA LA CONEXION ACTUAL
    - MY.INI (LINUX MY.CNF) DOS DIRECTIVAS: [mysqld] Y [client]
    
    %PROGRAMDATA%\MySQL\MySQL Server X.X\my.ini 
    RUTA PARA ACCEDER A LA CONFIGURACION DE MYSQL
*/

SHOW GLOBAL STATUS LIKE 'CREATED_TMP_DISK_TABLES';

SHOW GLOBAL STATUS LIKE 'CREATED_TMP_TABLES';

SHOW GLOBAL VARIABLES LIKE 'TMP_TABLE_SIZE';

/* 
SET GLOBAL TMP_TABLE_SIZE = ''; 
*/

/*MECANISMOS DE ALMACENAMIENTO
ENGINE : ES EL PARAMETRO QUE INDICA EL MECANISMO DE ALMACENAMIENTO EMPLEADO EN LA TABLA

LOS PRINCIPALES SON: MyISAM, InnoDB y MEMORY

- MyISAM: NO ES TRANSACCIONAL. SOLO PERMITE BLOQUEO A NIVEL TABLA. LA CLAVE EXTENA NO 
	SOPORTA FULL TEXT. ALMACENA DATOS DE MANERA MAS COMPACTA. INDICES HASH Y BTREE
		+ VARIABLES DE AMBIENTE :
			- key_buffer_size: DETERMINA EL TAMAÑO DE CACHE PAR ALMACENAR LOS INDICES DE 
				MyISAM. VARIA DE 8MB - 4GB DE ACUERDO CON EL OS
            - concurrent_insert: COMPORTAMIENTO DE INSERCIONES CONCURRENTES DENTRO DE UNA 
				TABLA MyISAM	
					* 0 = INSERCIONES SIMULTANEAS DESACTIVADAS
					* 1 = INSERCIONES SIMULTANEAS SIN INTERVALO DE TIEMPO
			- delay_key_write: ATRASO ENTRE AL ACTUALIZACION DE INDICES Y EL MOMENTO EN QUE
				SE CREA LA TABLA
			- max_write_lock_count: DETERMINA EL NUMERO DE GRABACIONES EN LAS TABLAS QUE TENDRAN 
				PRECEDENCIA A LAS LECTURAS
			-preload_buffer_size: TAMAÑO DEL BUFFER A SER USADO ANTES DE CARGAR LOS INDICES DE 
				CACHE DE CLAVES DE LAS TABLAS: 32KB
		+ APLICACIONES :
			- myisamchk: ANALIZA, OPTIMIZA Y REPARA TABLAS MyISAM
            - myisampack: CREA TABLAS MyISAM COMPACTADAS QUE SERAN USADAS SOLO PARA LECTURA
            - myisam_ftdump: EXHIBE INFORMACION MAS COMPLETA DE LOS CAMPOS DE TIPO DE TEXTO
		            
- InnoDB: MECANISMO POR DEFECTO. TRANSACCIONAL CON SOPORTE COMPLETO. CACHE Y BUFFER CONFIGURADO DE 
FORMA SEPARADA TANTO PARA LA BASE COMO PARA EL INDICE. BLOQUEO DE TABLA A NIVEL DE LINEA. 
IDEXACION BETREE. BACK-UP DE DB ONLINE - SIN BLOQUEO
	+ VARIBALES DE AMBIENTE:
		- TABLAS: 
			- innodb_data_file_path: DETERMINA CAMINO Y TAMAÑO MAXIMO DEL ARCHIVO DENTRO DEL SISTEMA
				DONDE SE ALAMCENARA LA INFORMACION
			- innodb_data_home_dir: CAMINO COMUN DEL DIRECTORIO DE TODOS LOS ARCHIVOS innodb; CUANDO 
				SE ESPECIFICA, GRABA TODO DENTRO DE ESTE DIRECTORIO. *default  = /mysqdldata
			- innodb_file_per_table: SEPARA EL ALMACENAMIENTO DE LOS DATOS Y SUS INDICES. POR DEFECTO 
				ALMACENA  DATOS E INDICES DE FORMA COMPARTIDA
		- DESEMPEÑO: 
			- innodb_buffer_pool_size: DETERMINA TAMAÑO DE ALMACENAMIENTO QUE innodb VA A USAR
				PARA ALMACENAR INDICES Y DATOS EN CACHE
            - innodb_flush_log_at_trz_commit: DETERMINA LA FRECUENCIA CON QUE EL BUFFER DE LOG IN ES 
				HABILITADO PARA EL DISCO. CRECE CON EL USO Y DESPUES DE UN LAPSO ES DESCARGADO AL HD.
			- innodb_log_file_size: TAMAÑO EN BYTES CON EL CUAL SE CREARAN LOS ARCHIVOS LOG IN. 
				POR DEFECTO SON 5MB
- Memory: MECANISMO DE ALMACENAMIENTO QUE CREA LAS TABLAS EN MEMORIA RAM. NO EN DISCO. NO SOPORTA
CLAVE EXTERNA. ACCESO RAPIDO A LA INFORMACION. LOS DATOS NECESITAN SER REINICIALIZADOS CON EL 
SERVIDOR. BLOQUEO A NIVEL TABLA. INDICE HASH Y BTREE. FORMATO LINEA DE LONGITUD FIJA (NO SOPORTA
BLOB/TEXT)

*/

USE EMPRESA;

CREATE TABLE df_table(id int, nombre varchar(100));

ALTER TABLE df_table ENGINE = MyISAM;

CREATE TABLE df_table1(id int, nombre varchar(100)) ENGINE = MEMORY;

-- engines
SHOW ENGINES;

-- directorio
SHOW VARIABLES WHERE Variable_Name LIKE '%dir';

/*
CAMBIAR LA RUTA DEL DIRECTORIO 
LA NUEVA RUTA DEBE CONTAR CON LA CARPETA DATA DENTRO DE ELLA Y AHI ES DONDE GUARDAREMOS LA INFO, 
YA QUE DENTRO DE LA CARPETA DATA EXISTEN BASES DE CONTROL NECESARIAS PARA EL FUNCIONAMIENTO DE MYSQL

ACCEDEMOS A MY.INI / PATH TO THE DATABASE ROOT / DATADIR = {NUEVA RUTA}
SE DEBE REINICIAR EL SERVIDOR PARA PODER ACTUALIZAR LA RUTA, ADEMAS DEBEMOS COPIAR LA CARPETA DATA
PARA QUE SE PUEDA INICIALIZAR CORRECTAMENTE
*/


/*BACK UP 
LOGICO 
FISICO


MYSQLDUMP
	CMD / ACCEDEMOS A LA RUTA DE MYSQL SERVER X.X/BIN 
    DENTRO DE BIN
    mysqldump -u<user> -p<password> --databases <database> > <rutadeseada>\<nombre_archivo.sql>
    
    C:\Archivos de programa\MySQL\MySQL Server 8.0\bin>mysqldump -uroot -p --databases jugos_ventas > d:\MySQLCurso\jugos_ventas_full.sql
	
RECUPERAR LA DB DE UN DUMP
	CMD/ ACCEDEMOS A LA RUNTA DE MYSQL SERVER X.X/BIN
    DENTRO DE BIN
    mysql -uroot -p < <ruta_donde_se_encuentra_dump>\<nombre_archivo>
*/


-- BACK UP CON WORK BENCH

-- PARA LA INSTANCIA
LOCK INSTANCE FOR BACKUP;

/*
ADMINISTRATION / DATA EXPORT / INGRESAMOS LA BASE QUE QUEREMOS HACER EL BACK UP
*/

-- REINICIA LA CONEXION
UNLOCK INSTANCE;



-- BACK UP FISICO, COPIAR TODA LA CARPETA DATA Y my.ini



