CREATE DATABASE JUGOS;

USE JUGOS;

CREATE DATABASE IF NOT EXISTS JUGOS;

CREATE DATABASE JUGOS2;

DROP DATABASE JUGOS2;

CREATE SCHEMA IF NOT EXISTS VENTAS_JUGOS2 DEFAULT CHARSET utf16;

DROP SCHEMA VENTAS_JUGOS2;

USE JUGOS;

/*CREANDO TABLAS*/
CREATE TABLE VENDEDOR(
MATRICULA VARCHAR(5) NOT NULL,
NOMBRE VARCHAR(100) NULL,
BARRIO VARCHAR(50) NULL,
COMISION FLOAT NULL,
FECHA_ADMISION DATE NULL,
VACACIONES BIT(1) NULL,
PRIMARY KEY (MATRICULA)
);

CREATE TABLE PRODUCTO(
CODIGO VARCHAR(10)  NOT NULL,
DESCIRPCION VARCHAR(100) NULL,
SABOR VARCHAR(50) NULL,
TAMANO VARCHAR(50) NULL,
ENVASE VARCHAR(50) NULL,
PRECIO_LISTA FLOAT NULL,
PRIMARY KEY(CODIGO)
);

CREATE TABLE FACTURAS(
NUMERO VARCHAR(5) PRIMARY KEY NOT NULL,
FECHA DATE NULL,
DNI VARCHAR(11) NOT NULL,
MATRICULA VARCHAR(5) NOT NULL,
IMPUESTO FLOAT NULL
);

CREATE TABLE CLIENTES(
DNI VARCHAR(11) PRIMARY KEY NOT NULL,
NOMBRE VARCHAR(100) NULL,
DIRECCION VARCHAR(150) NULL,
BARRIO VARCHAR(50) NULL,
CIUDAD VARCHAR(50) NULL,
ESTADO  VARCHAR(10) NULL,
CP VARCHAR(10) NULL,
FECHA_NACIMIENTO DATE NULL,
EDAD SMALLINT(2) NULL,
SEXO VARCHAR(1) NULL,
LIMITE_CREDITO FLOAT NULL,
VOLUMEN_COMPRA FLOAT NULL,
PRIMERA_COMPRA BIT(1) NOT NULL
);

CREATE TABLE ITEMS_FACTURAS(
NUMERO VARCHAR(5) NOT NULL,
CODIGO VARCHAR(10) NOT NULL,
CANTIDAD INT NULL,
PRECIO FLOAT NULL,
PRIMARY KEY(NUMERO, CODIGO)
);

/*LLAVES FORANEAS*/
ALTER TABLE facturas 
ADD CONSTRAINT FK_CLIENTE 
FOREIGN KEY (DNI) REFERENCES CLIENTES(DNI);

ALTER TABLE FACTURAS
ADD CONSTRAINT FK_VENDEDOR 
FOREIGN KEY (MATRICULA) REFERENCES VENDEDOR (MATRICULA);

ALTER TABLE items_facturas
ADD CONSTRAINT FK_FACTURA
FOREIGN KEY (NUMERO) REFERENCES facturas (NUMERO);

ALTER TABLE TB_items_facturas
ADD CONSTRAINT FK_PRODUCTO
FOREIGN KEY (CODIGO) REFERENCES TB_PRODUCTOS (CODIGO);

/*CAMBIANDO DATOS DE LAS TABLAS*/

ALTER TABLE FACTURAS RENAME TB_FACTURAS;

ALTER TABLE CLIENTES RENAME TB_CLIENTES;
ALTER TABLE items_facturas RENAME TB_ITEMS_FACTURAS;
ALTER TABLE PRODUCTO RENAME TB_PRODUCTOS;
ALTER TABLE VENDEDOR RENAME TB_VENDEDORES;

/*INSERTANDO DATOS A LA TABLA*/

USE JUGOS;

INSERT INTO TB_PRODUCTOS (CODIGO,DESCRIPCION,SABOR,TAMANO,ENVASE,PRECIO_LISTA) VALUES (
'1040107', 'Light', 'Sandía','350mL', 'lata', 4.56
);

INSERT INTO TB_PRODUCTOS VALUES (
'1040108', 'Light', 'Guanabana','350mL', 'lata', 4.00
);
INSERT INTO TB_PRODUCTOS VALUES (
'1040109', 'Light', 'Asai','350mL', 'lata', 5.60
);

/*INSERTANDO MULTILPLES REGISTROS*/
INSERT INTO TB_PRODUCTOS VALUES (
'1040110', 'Light', 'Manzana','350mL', 'lata', 6.00),
('104011', 'Light', 'Mnago','350mL', 'lata', 3.50);

INSERT INTO TB_CLIENTES VALUES 
( '9283760794', 'Edson Calisaya','Sta Úrsula Xitla', 'Barrio del Niño Jesús','Ciudad de México', 'EM','22002002', '1995-01-07', 25, 'M', 150000, 250000,1),
( '7771579779', 'Marcelo Perez', 'F.C. de Cuernavaca 13', 'Carola','Ciudad de México', 'EM','88202912','1992-01-25',29, 'M',70000,160000, 1),
('5576228758', 'Patricia Olivera', 'Pachuca 75','Condesa', 'Ciudad de México', 'EM', '88192029', '1995-01-14' , 25, 'F', 70000, 160000,1 );

/*CAMBIANDO REGISTROS INCORRECTOS*/
UPDATE TB_PRODUCTOS SET CODIGO = '1040111' WHERE CODIGO = '104011';

/*CAMBIANDO EL NOMBRE DE CAMPOS EN UNA TABLA*/
ALTER TABLE TB_PRODUCTOS CHANGE DESCRIPCION_PROD DESCRIPCION VARCHAR(100) NULL;

/*INSERTANDO DATOS DESDE OTRA TABLA*/

USE JUGOS_VENTAS;
SELECT * FROM JUGOS_VENTAS.TABLA_DE_PRODUCTOS;

SELECT 
CODIGO_DEL_PRODUCTO AS CODIGO,
NOMBRE_DEL_PRODUCTO AS DESCRIPCION,
SABOR,
TAMANO,
ENVASE,
PRECIO_DE_LISTA AS PREICO_LISTA
FROM jugos_ventas.tabla_de_productos
WHERE CODIGO_DEL_PRODUCTO NOT IN (SELECT CODIGO FROM TB_PRODUCTO);

INSERT INTO JUGOS.TB_PRODUCTOS 
SELECT 
CODIGO_DEL_PRODUCTO AS CODIGO,
NOMBRE_DEL_PRODUCTO AS DESCRIPCION,
SABOR,
TAMANO,
ENVASE,
PRECIO_DE_LISTA AS PRECIO_LISTA
FROM tabla_de_productos
WHERE CODIGO_DEL_PRODUCTO NOT IN (SELECT CODIGO FROM JUGOS.TB_PRODUCTOS);

INSERT INTO JUGOS.TB_CLIENTES
SELECT 
DNI,
NOMBRE,
DIRECCION_1 AS DIRECCION,
BARRIO,
CIUDAD,
ESTADO,
CP,
FECHA_DE_NACIMIENTO AS FECHA_NACIMIENTO,
EDAD,
SEXO,
LIMITE_DE_CREDITO AS LIMITE_CREDITO,
VOLUMEN_DE_COMPRA AS VOLUMEN_COMPRA,
PRIMERA_COMPRA FROM jugos_ventas.tabla_de_clientes
WHERE DNI NOT IN (SELECT DNI FROM JUGOS.TB_CLIENTES);

SELECT* FROM jugos.tb_clientes;

/*ACTUALIZANDO REGISTROS*/

UPDATE tb_productos SET PRECIO_LISTA = 5 WHERE CODIGO = '1000889';

UPDATE tb_productos 
SET 
DESCRIPCION = 'Sabor de la Montaña', 
TAMANO = '1 L', 
ENVASE = 'Botella PET'
WHERE CODIGO = '1000889';

UPDATE tb_clientes
SET
VOLUMEN_COMPRA = VOLUMEN_COMPRA/10;

UPDATE TB_CLIENTES
SET DIRECCION = 'Jorge Emilio 23',
BARRIO = 'San Antonio',
CIUDAD = 'Guadalajara',
ESTADO= 'Jalisco',
CP = '44700000'
WHERE DNI = '5840119709';

/*ACTUALIZANDO CON FROM UTLIZANDO UNA TABLA DE OTRA DB*/

SELECT * FROM tb_vendedores;

SELECT * FROM JUGOS_VENTAS.TABLA_DE_VENDEDORES;

SELECT * FROM tb_vendedores A INNER JOIN jugos_ventas.TABLA_DE_VENDEDORES B
ON A.MATRICULA = substr(B.MATRICULA,3,3); 

UPDATE tb_vendedores A
INNER JOIN jugos_ventas.TABLA_DE_VENDEDORES B
ON A.MATRICULA = substr(B.MATRICULA, 3,3)
SET A.VACACIONES = B.VACACIONES;

SELECT * FROM tb_CLIENTES;

UPDATE tb_clientes A INNER JOIN TB_VENDEDORES B
ON A.BARRIO = B.BARRIO
SET VOLUMEN_COMPRA = VOLUMEN_COMPRA*1.3;

/*ELIMINAR REGISTROS DE UNA TABLA*/

INSERT INTO tb_productoS (CODIGO,DESCRIPCION,SABOR,TAMANO,ENVASE,PRECIO_LISTA)
VALUES ('1001001','Sabor Alpino','Mango','700 ml','Botella',7.50),
         ('1001000','Sabor Alpino','Melón','700 ml','Botella',7.50),
         ('1001002','Sabor Alpino','Guanábana','700 ml','Botella',7.50),
         ('1001003','Sabor Alpino','Mandarina','700 ml','Botella',7.50),
         ('1001004','Sabor Alpino','Banana','700 ml','Botella',7.50),
         ('1001005','Sabor Alpino','Asaí','700 ml','Botella',7.50),
         ('1001006','Sabor Alpino','Mango','1 Litro','Botella',7.50),
         ('1001007','Sabor Alpino','Melón','1 Litro','Botella',7.50),
         ('1001008','Sabor Alpino','Guanábana','1 Litro','Botella',7.50),
         ('1001009','Sabor Alpino','Mandarina','1 Litro','Botella',7.50),
         ('1001010','Sabor Alpino','Banana','1 Litro','Botella',7.50),
         ('1001011','Sabor Alpino','Asaí','1 Litro','Botella',7.50);
         
SELECT * FROM tb_productos
WHERE DESCRIPCION = 'SABOR ALPINO';
         
DELETE FROM tb_productos WHERE CODIGO = '1001000';

DELETE FROM tb_productos WHERE TAMANO = '1 LITRO';

SELECT CODIGO_DEL_PRODUCTO FROM jugos_ventas.TABLA_DE_PRODUCTOS;

SELECT CODIGO FROM TB_PRODUCTOS 
WHERE CODIGO NOT IN(SELECT CODIGO_DEL_PRODUCTO FROM jugos_ventas.TABLA_DE_PRODUCTOS);

DELETE FROM tb_productos 
WHERE CODIGO NOT IN(SELECT CODIGO_DEL_PRODUCTO FROM jugos_ventas.TABLA_DE_PRODUCTOS);

/*COMMIT Y ROLLBACK

TRANSACCION: UNIDAD LOGICA DE PROCESAMIENTO  QUE BUSCA  
PRESERVAR LA INTEGRIDAD Y CONSISTENCIA DE LOS DATOS.

START TRANSACTION: CREA UN PUNTO DE ESTADO DE LA BASE DE DATOS.

COMMIT: CONFIRAM Y GRABA LA INFORMACION ENTRE START TRANSACTION  Y COMMIT.

ROLLBACK: RECHAZA LA INFORMACION ENTRE START TRANSACTION  Y ROLLBACK. 
*/

INSERT INTO `jugos`.`tb_vendedores`
(`MATRICULA`,
`NOMBRE`,
`BARRIO`,
`COMISION`,
`FECHA_ADMISION`,
`VACACIONES`)
VALUES
('256',
'FERNANDO RUIZ',
'OBLATOS',
0.1,
'2015-06-14',
0);


SELECT *FROM tb_vendedores;

START transaction;
INSERT INTO `jugos`.`tb_vendedores`
(`MATRICULA`,
`NOMBRE`,
`BARRIO`,
`COMISION`,
`FECHA_ADMISION`,
`VACACIONES`)
VALUES
('257',
'FERNANDO ROJAS',
'OBLATOS',
0.1,
'2015-06-14',
0);
INSERT INTO `jugos`.`tb_vendedores`
(`MATRICULA`,
`NOMBRE`,
`BARRIO`,
`COMISION`,
`FECHA_ADMISION`,
`VACACIONES`)
VALUES
('258',
'ALBERTO RUIZ',
'SAN DIEGO',
0.1,
'2015-06-14',
0);

rollback;
commit;

SELECT * FROM  tb_vendedores;

/*AUTO INCREMENT*/

CREATE TABLE TB_IDENTIFICACION (
ID INT auto_increment NOT NULL,
DESCRIPCION VARCHAR(100),
PRIMARY KEY(ID)
);

SELECT * FROM TB_IDENTIFICACION;

INSERT INTO TB_IDENTIFICACION (DESCRIPCION) VALUES 
('CLIENTE A'),
('CLIENTE B');

DELETE FROM tb_identificacion
WHERE ID=4;

insert INTO tb_identificacion (DESCRIPCION) VALUES
('CLIENTE C'),
('CLIENTE D'),
('CLIENTE E'),
('CLIENTE F');

/*PATRONES
LOS PATRONES EN LAS TABLAS SE CREAN A TRAVÉS DEL COMANDO DEFAULT INLCUYENDO COMILLAS 
SIMPLES EL VALOR PREDETERMINADO QUE QUEREMOS UTILIZAR.
*/

CREATE TABLE TB_DEFAULT(
ID INT auto_increment NOT NULL,
DESCRIPCION VARCHAR(50) NOT NULL,
DOMICILIO VARCHAR(100),
CIUDAD VARCHAR(50) default 'MONTERREY',
FECHA timestamp DEFAULT current_timestamp(),
PRIMARY KEY(ID)
);

INSERT INTO TB_DEFAULT (DESCRIPCION, DOMICILIO, CIUDAD, FECHA) values 
('CLIENTE A','CALLE LUNA 1','CANCUN', '2021-10-08');

SELECT * FROM TB_DEFAULT;

INSERT INTO TB_DEFAULT (DESCRIPCION) values 
('CLIENTE B');

/*TRIGGERS
PERMITE REALIZAR ACCIONES TRAS REALIZAR ALGUNA ACCION. PUEDEN SER UNO O MÁS COMANDOS
*/

CREATE TABLE FACTURACION(
FECHA DATE,
VENTA_TOTAL FLOAT
);

SELECT *FROM FACTURACION;

SELECT * FROM tb_items_facturas;
SELECT * FROM tb_facturas;

INSERT INTO TB_FACTURAS VALUES
('0100','2021-10-15','1471156710','235','0.10');

INSERT INTO tb_items_facturas VALUES
('0100','1002767',200, 35),
('0100','1004327',200,25);

SELECT A.FECHA, SUM(B.CANTIDAD * B.PRECIO) AS VENTA_TOTAL FROM TB_FACTURAS A
INNER JOIN tb_items_facturas B
ON A.NUMERO = B.NUMERO
GROUP BY A.FECHA;

INSERT INTO TB_FACTURAS VALUES
('0101','2021-10-15','492472718','235','0.10');
INSERT INTO tb_items_facturas VALUES
('0101','1002767',400, 35),
('0101','1004327',100,25);

/*CREANDO TRIGGER*/

DELIMITER //
CREATE TRIGGER TG_FACTURACION_INSERT
AFTER INSERT ON tb_items_facturas
FOR each row BEGIN 
	DELETE FROM facturacion;
	INSERT INTO FACTURACION
	SELECT A.FECHA, SUM(B.CANTIDAD * B.PRECIO) AS VENTA_TOTAL FROM TB_FACTURAS A
	INNER JOIN tb_items_facturas B
	ON A.NUMERO = B.NUMERO
	GROUP BY A.FECHA;
END//

INSERT INTO TB_FACTURAS VALUES
('0103','2021-10-15','492472718','235','0.10');
INSERT INTO tb_items_facturas VALUES
('0103','1002767',400, 35),
('0103','1004327',100,25);

SELECT * FROM FACTURACION;

INSERT INTO TB_FACTURAS VALUES
('0104','2021-10-15','492472718','235','0.10');
INSERT INTO tb_items_facturas VALUES
('0104','1002767',400, 35),
('0104','1004327',500,25);

SELECT DNI, EDAD, FECHA_NACIMIENTO, TIMESTAMPDIFF(YEAR, FECHA_NACIMIENTO, NOW()) AS ANO
FROM TB_CLIENTES;

DELIMITER //
CREATE TRIGGER TG_CLIENTES_ANO
BEFORE INSERT ON TB_CLIENTES
FOR EACH ROW BEGIN
	SET NEW.EDAD = TIMESTAMPDIFF(YEAR, FECHA_NACIMIENTO, NOW());
END//

SELECT * FROM TB_CLIENTES;

/*TRIGGERS */

SELECT * FROM FACTURACION;
SELECT * FROM TB_FACTURAS;
SELECT * FROM TB_ITEMS_FACTURAS;

UPDATE TB_ITEMS_FACTURAS SET CANTIDAD = 600 WHERE NUMERO= 0101 AND CODIGO = 1002767;

DELETE FROM TB_ITEMS_FACTURAS WHERE NUMERO=0104 AND CODIGO =1004327;

/*TRIGGER DELETE UPDATE*/

DELIMITER //
CREATE TRIGGER TG_FACTURACION_DELETE
AFTER DELETE ON tb_items_facturas
FOR each row BEGIN 
	DELETE FROM facturacion;
	INSERT INTO FACTURACION
	SELECT A.FECHA, SUM(B.CANTIDAD * B.PRECIO) AS VENTA_TOTAL FROM TB_FACTURAS A
	INNER JOIN tb_items_facturas B
	ON A.NUMERO = B.NUMERO
	GROUP BY A.FECHA;
END//

DELIMITER //
CREATE TRIGGER TG_FACTURACION_UPDATE
AFTER UPDATE ON tb_items_facturas
FOR each row BEGIN 
	DELETE FROM facturacion;
	INSERT INTO FACTURACION
	SELECT A.FECHA, SUM(B.CANTIDAD * B.PRECIO) AS VENTA_TOTAL FROM TB_FACTURAS A
	INNER JOIN tb_items_facturas B
	ON A.NUMERO = B.NUMERO
	GROUP BY A.FECHA;
END//


